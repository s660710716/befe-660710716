basePath: /api/v1
definitions:
  main.Book:
    properties:
      author:
        type: string
      category:
        description: ฟิลด์ใหม่
        type: string
      cover_image:
        type: string
      created_at:
        type: string
      description:
        type: string
      discount:
        type: integer
      id:
        type: integer
      is_new:
        type: boolean
      isbn:
        type: string
      language:
        type: string
      original_price:
        type: number
      pages:
        type: integer
      price:
        type: number
      publisher:
        type: string
      rating:
        type: number
      reviews_count:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  main.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: This is a simple example of using Gin with Swagger.
  title: Simple API Example
  version: "1.0"
paths:
  /books:
    get:
      description: Get details of a book by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all book
      tags:
      - Books
  /books/:
    post:
      description: post new book
      parameters:
      - description: Book JSON
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Post book
      tags:
      - Books
  /books/{category}:
    get:
      description: Get details of a book by Category
      parameters:
      - description: Book Category
        in: path
        name: category
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get book by Category
      tags:
      - Books
  /books/{id}:
    delete:
      description: Delete details of a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Delete book by ID
      tags:
      - Books
    put:
      description: update details of a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book JSON
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: update book by ID
      tags:
      - Books
swagger: "2.0"
